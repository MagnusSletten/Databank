#Builder stage is meant to build GROMACS without keeping additional needed dependencies
FROM debian:bookworm-slim AS builder

# Define arguments for GROMACS version
ARG GROMACS_VERSION=2025.2
ENV GROMACS_VERSION=${GROMACS_VERSION}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    bash \
    wget \
    python3 \
    python3-pip \
    build-essential && \
    rm -rf /var/lib/apt/lists/*


# Install the latest CMake via pip
RUN pip3 install --no-cache-dir cmake --break-system-packages

# Install GROMACS
RUN wget https://ftp.gromacs.org/gromacs/gromacs-${GROMACS_VERSION}.tar.gz && \
    tar xfz gromacs-${GROMACS_VERSION}.tar.gz && \
    rm gromacs-${GROMACS_VERSION}.tar.gz && \
    cd gromacs-${GROMACS_VERSION} && \
      mkdir build && cd build && \
      cmake .. -DGMX_BUILD_OWN_FFTW=ON -DREGRESSIONTEST_DOWNLOAD=ON && \
      make && \
      make check && \
      make install && \
      rm -rf /var/lib/apt/lists/* && \
    cd ../.. && rm -rf gromacs-${GROMACS_VERSION}

# Final stage to create runtime image
FROM debian:bookworm-slim AS final

# Define arguments for GROMACS version (for PATH consistency)
ARG GROMACS_VERSION=2025.2
ENV GROMACS_VERSION=${GROMACS_VERSION}

# Copy the installed GROMACS tree from the builder stage
COPY --from=builder /usr/local/gromacs /usr/local/gromacs


RUN apt-get update && apt-get install -y \
    bash \
    git \
    curl \
    python3 \
    python3-pip  &&\    
    rm -rf /var/lib/apt/lists/*

# Clone the MDAnalysis repository and install it
RUN git clone --branch develop --depth 1 https://github.com/MDAnalysis/mdanalysis.git && \
    cd mdanalysis/package && \
    pip install --no-cache-dir --break-system-packages . && \
    cd ../.. && \
    rm -rf mdanalysis

RUN apt-get update && \
  apt-get install -y && \
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && \
  chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg && \
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null && \
  apt-get update && \
  apt-get install -y gh && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

# Add pytest
RUN pip3 install --no-cache-dir --break-system-packages pytest

# Create a symbolic link for python -> python3
RUN ln -s /usr/bin/python3 /usr/bin/python

# Expose GROMACS binaries via PATH
ENV PATH="/usr/local/gromacs/bin:${PATH}"

#Add a non-root user 'runner'
RUN useradd -m -s /bin/bash runner

# Switch to the non-root user
USER runner

# Set the working directory inside the container
WORKDIR /Databank
